<?php

namespace SesBundle\Repository;

use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * RecipientRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RecipientRepository extends \Doctrine\ORM\EntityRepository
{
	/**
	 * Our new getAllPosts() method
	 *
	 * 1. Create & pass query to paginate method
	 * 2. Paginate will return a `\Doctrine\ORM\Tools\Pagination\Paginator` object
	 * 3. Return that object to the controller
	 *
	 * @param integer $pagina The current page (passed from controller)
	 *
	 * @return \Doctrine\ORM\Tools\Pagination\Paginator
	 */
	public function getRecipients($page= 1, $limit = 5, $search = false, $filterBySubscription = false)
	{
            // Create our query
            $builder = $this->createQueryBuilder('r')
            ->leftJoin('r.subscriptionId', 'subscription')
            ->orderBy('r.id', 'DESC');

            //$builder->where('p.ativo = 1');

            if($search!== false && strlen($search) >= 3)
            {
                $builder
                    ->andWhere("r.email LIKE :busca OR r.info LIKE :busca OR r.subject LIKE :busca")
                    ->setParameter('busca', '%'.$search.'%');
            }
            
            if(is_array($filterBySubscription))
            {
                $builder
                    ->andWhere("r.id IN(:subscription_ids)")
                    ->setParameter('subscription_ids', $filterBySubscription, \Doctrine\DBAL\Connection::PARAM_STR_ARRAY);
            }

            $query = $builder->getQuery();

            // No need to manually get the result ($query->getResult())

            $paginator = $this->paginate($query, $page, $limit);

            return $paginator;
	}
	
	/**
	 * Paginator Helper
	 *
	 * Pass through a query object, current page & limit
	 * the offset is calculated from the page and limit
	 * returns an `Paginator` instance, which you can call the following on:
	 *
	 *     $paginator->getIterator()->count() # Total fetched (ie: `5` posts)
	 *     $paginator->count() # Count of ALL posts (ie: `20` posts)
	 *     $paginator->getIterator() # ArrayIterator
	 *
	 * @param Doctrine\ORM\Query $dql   DQL Query Object
	 * @param integer            $page  Current page (defaults to 1)
	 * @param integer            $limit The total number per page (defaults to 5)
	 *
	 * @return \Doctrine\ORM\Tools\Pagination\Paginator
	 */
	public function paginate($dql, $page = 1, $limit = 5)
	{
		$paginator = new Paginator($dql);
		
		$paginator->getQuery()
		->setFirstResult($limit * ($page - 1)) // Offset
		->setMaxResults($limit); // Limit
		
		return $paginator;
	}
}
